#include"stdafx.h"
#include<stdio.h>

struct Node {
	Node *lchild;
	Node *rchild;
	int c;
}Tree[110];

int loc;

Node *create() {
	Tree[loc].lchild = Tree[loc].rchild = NULL;
	return &Tree[loc++];
}

void preOrder(Node *T) {
	printf("%d ", T->c);
	if(T->lchild!=NULL)
		preOrder(T->lchild);
	if (T->rchild != NULL)
		preOrder(T->rchild);
}
void inOrder(Node *T) {
	if (T->lchild != NULL)
		inOrder(T->lchild);
	printf("%d ", T->c);
	if (T->rchild != NULL)
		inOrder(T->rchild);
}
void postOrder(Node *T) {
	if (T->lchild != NULL)
		postOrder(T->lchild);
	if (T->rchild != NULL)
		postOrder(T->rchild);
	printf("%d ", T->c);
}

Node *insert(Node *T, int c) {
	if (T == NULL) {
		T = create();
		T->c = c;
		return T;
	}
	else if (T->c<c) {
		T->rchild=insert(T->rchild,c);
	}
	else if (T->c>c) {
		T->lchild=insert(T->lchild, c);
	}
	return T;
}

int main() {
	int n;
	while (scanf("%d",&n)!=EOF) {
		loc = 0;
		Node *T=NULL;
		for (int i = 0; i < n;i++) {
			int x;
			scanf("%d", &x);
			T = insert(T,x);
		}
		preOrder(T);
		putchar('\n');
		inOrder(T);
		putchar('\n');
		postOrder(T);
		putchar('\n');
	}
	return 0;
}
