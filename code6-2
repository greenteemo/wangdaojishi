#include"stdafx.h"
#include<stdio.h>
#include<queue>
using namespace std;

bool mark[50][50][50];
int maze[50][50][50];

struct N {
	int x, y, z;
	int t;
};
queue<N>Q;

int go[6][3]{
	1,0,0,
	-1,0,0,
	0,1,0,
	0,-1,0,
	0,0,1,
	0,0,-1
};

int BFS(int a,int b,int c) {
	printf("----------------\n");
	while (Q.empty()==false) {
		N tmp;
		tmp = Q.front();
		printf("%d %d %d %d\n",tmp.x,tmp.y,tmp.z,tmp.t);
		Q.pop();
		for (int i = 0; i < 6;i++) {
			int nx = tmp.x + go[i][0];
			int ny = tmp.y + go[i][1];
			int nz = tmp.z + go[i][2];
			if (nx < 0 || nx >= a || ny < 0 || ny >= b || nz < 0 || nz >= c) continue;
			if (maze[nx][ny][nz] == 1)continue;
			if (mark[nx][ny][nz] == true)continue;
			N tmp2;
			tmp2.x = nx;
			tmp2.y = ny;
			tmp2.z = nz;
			tmp2.t = tmp.t + 1;
			Q.push(tmp2);
			mark[nx][ny][nz] = true;
			if (nx == a - 1 && ny == b - 1 && nz == c - 1){
				printf("----------------\n");
				return tmp2.t;
			}
		}
	}
	printf("----------------\n");
	return -1;
}

int main() {
	int n;
	scanf("%d",&n);
	while (n--!=0) {
		int a, b, c, t;
		scanf("%d%d%d%d",&a,&b,&c,&t);
		for (int i = 0; i < a; i++) {
			for (int j = 0; j < b;j++) {
				for (int k = 0; k < c;k++) {
					scanf("%d",&maze[i][j][k]);
					mark[i][j][k] = false;
				}
			}
		}
		while (Q.empty() == false)Q.pop();
		mark[0][0][0] = true;
		N tmp;
		tmp.x = tmp.y = tmp.z = tmp.t = 0;
		Q.push(tmp);
		int ret = BFS(a, b, c);
		if (ret <= t) printf("%d\n",ret);
		else printf("-1\n");
	}
	return 0;
}
